# this is a R script to do data merging and mapping for the case study of Cyclictic
library(RMySQL)
mySQLconnection <- dbConnect(RMySQL::MySQL(),
dbname='Cyclistic',
host='localhost',
port=3306,
user='root',
password='JunYu1110@')
# list all tables
dbListTables(mySQLconnection)
# try a query
result <- dbSendQuery(mySQLconnection,"SELECT * FROM trip")
data.frame <- fetch(result,n=5)
print(data.frame)
library(tidyverse)
library(tidyr)
library(dplyr)
# read CSV files of one format
dir2 <- r"(D:\School\Reading\Google Data Analytic Cert\Case Study\03 BikeSharing\Data\format2)"
files_format2 <- list.files(path=dir2, pattern=NULL, all.files=FALSE,
full.names=FALSE)
files_format2
data2 = data.frame()
for (file in files_format2){
data2 <- rbind(data2,data.frame(read_csv(paste(dir2,"\\",file,sep=""))))
#head(data_raw,5)
}
glimpse(data2)
# read CSV files of another format
files_format1
# the directory of the CSV files to read
dir1 <- r"(D:\School\Reading\Google Data Analytic Cert\Case Study\03 BikeSharing\Data\format1)"
files_format1 <- list.files(path=dir1, pattern=NULL, all.files=FALSE,
full.names=FALSE)
files_format1
data1= data.frame()
for (file in files_format1){
data1 <- rbind(data1,data.frame(read_csv(paste(dir1,"\\",file,sep=""))))
#head(data_raw,5)
}
glimpse(data1)
nrow(data1)+nrow(data2)
print(nrow(data1),nrow(data2),nrow(data1)+nrow(data2))
print(paste(nrow(data1),nrow(data2),nrow(data1)+nrow(data2)))
colnames(data1)
colnames(data2)
colnames(data1)["trip_id"] <- "ride_id"
colnames(data1)[0] <- "ride_id"
colnames(data1)
data1_t <- data1
data1_t %>% rename("trip_id"="ride_id","start_time"="started_at","end_time"="ended_at","from_station_id"="start_station_id","from_station_name"="start_station_name","to_station_id"="end_station_id","to_station_name"="end_station_name","usertype"="member_casual")
data1_t <- data1
data1_t %>% rename("ride_id"="trip_id"=,"start_time"="started_at","end_time"="ended_at","from_station_id"="start_station_id","from_station_name"="start_station_name","to_station_id"="end_station_id","to_station_name"="end_station_name","usertype"="member_casual")
data1_t <- data1
data1_t %>% rename("ride_id"="trip_id","start_time"="started_at","end_time"="ended_at","from_station_id"="start_station_id","from_station_name"="start_station_name","to_station_id"="end_station_id","to_station_name"="end_station_name","usertype"="member_casual")
data1_t <- data1
data1_t %>% rename("ride_id"="trip_id","started_at"="start_time","ended_at"="end_time","start_station_id"="from_station_id","start_station_name"="from_station_name","end_station_id"="to_station_id","end_station_name","to_station_name","member_casual"="usertype")
data1_t <- data1
data1_t %>% rename("ride_id"="trip_id","started_at"="start_time","ended_at"="end_time","start_station_id"="from_station_id","start_station_name"="from_station_name","to_station_id"="end_station_id","to_station_name"="end_station_name","member_casual"="usertype")
data1_t %>% rename("ride_id"="trip_id","started_at"="start_time","ended_at"="end_time","start_station_id"="from_station_id","start_station_name"="from_station_name","end_station_id"="to_station_id","end_station_name"="to_station_name","member_casual"="usertype")
colnames(data1_t)
data1_t <- data1_t %>% rename("ride_id"="trip_id","start_station_id"="from_station_id","start_station_name"="from_station_name","end_station_id"="to_station_id","end_station_name"="to_station_name","member_casual"="usertype")
colnames(data1_t)
colnames(data1_t)
colnames(data2)
sort(colnames(data1_t))
sort(colnames(data2))
data1_t['end_lat'] <- NA
data1_t['end_lng'] <- NA
sort(colnames(data1_t))
sort(colnames(data2))
data1_t <- data1_t[!bikeid]
data1_t <- data1_t[!"bikeid"]
data1_t <- data1_t[-c("bikeid")]
data1_t <- select(data1_t,-c("bikeid"))
sort(colnames(data1_t))
sort(colnames(data2))
# this is a R script to do data merging and mapping for the case study of Cyclictic
library(RMySQL)
mySQLconnection <- dbConnect(RMySQL::MySQL(),
dbname='Cyclistic',
host='localhost',
port=3306,
user='root',
password='JunYu1110@')
# list all tables
dbListTables(mySQLconnection)
# try a query
result <- dbSendQuery(mySQLconnection,"SELECT * FROM trip")
data.frame <- fetch(result,n=5)
print(data.frame)
library(tidyverse)
library(tidyr)
library(dplyr)
# read CSV files of one format
dir2 <- r"(D:\School\Reading\Google Data Analytic Cert\Case Study\03 BikeSharing\Data\format2)"
files_format2 <- list.files(path=dir2, pattern=NULL, all.files=FALSE,
full.names=FALSE)
files_format2
data2 = data.frame()
for (file in files_format2){
data2 <- rbind(data2,data.frame(read_csv(paste(dir2,"\\",file,sep=""))))
#head(data_raw,5)
}
glimpse(data2)
# read CSV files of another format
# the directory of the CSV files to read
dir1 <- r"(D:\School\Reading\Google Data Analytic Cert\Case Study\03 BikeSharing\Data\format1)"
files_format1 <- list.files(path=dir1, pattern=NULL, all.files=FALSE,
full.names=FALSE)
files_format1
data1= data.frame()
for (file in files_format1){
data1 <- rbind(data1,data.frame(read_csv(paste(dir1,"\\",file,sep=""))))
#head(data_raw,5)
}
glimpse(data1)
colnames(data1)
colnames(data2)
# change names of columns for merging
data1_t <- data1
data1_t <- data1_t %>% rename("ride_id"="trip_id","start_station_id"="from_station_id","start_station_name"="from_station_name","end_station_id"="to_station_id","end_station_name"="to_station_name","member_casual"="usertype")
sort(colnames(data1_t))
sort(colnames(data2))
# columns to add for data1
col_add_1 <- c("end_lat","end_lng","start_lat","start_lng","rideable_type")
# columns to remove for data1
col_rmv_1 <- c("bikeid")
# columns to add for data2
col_add_2 <- c("birthyear","gender","duration")
for(col in col_add_1){
data1_t[col] <- NA
}
data1_t <- select(data1_t,-c("bikeid"))
for(col in col_add_2){
data2[col] <- NA
}
sort(colnames(data1_t))
sort(colnames(data2))
data1_t <- data1_t %>% rename("ride_id"="trip_id","start_station_id"="from_station_id","start_station_name"="from_station_name","end_station_id"="to_station_id","end_station_name"="to_station_name","member_casual"="usertype","tripduration"="duration")
data1_t <- data1
data1_t <- data1_t %>% rename("ride_id"="trip_id","start_station_id"="from_station_id","start_station_name"="from_station_name","end_station_id"="to_station_id","end_station_name"="to_station_name","member_casual"="usertype","tripduration"="duration")
data1_t <- data1
data1_t <- data1_t %>% rename("ride_id"="trip_id","start_station_id"="from_station_id","start_station_name"="from_station_name","end_station_id"="to_station_id","end_station_name"="to_station_name","member_casual"="usertype","duration"="tripduration")
# columns to add for data1
col_add_1 <- c("end_lat","end_lng","start_lat","start_lng","rideable_type")
# columns to remove for data1
col_rmv_1 <- c("bikeid")
# columns to add for data2
col_add_2 <- c("birthyear","gender","duration")
for(col in col_add_1){
data1_t[col] <- NA
}
data1_t <- select(data1_t,-c("bikeid"))
for(col in col_add_2){
data2[col] <- NA
}
sort(colnames(data1_t))
sort(colnames(data2))
data2<- data2 %>% rename("end_time"="ended_at","start_time"="started_at")
sort(colnames(data1_t))
sort(colnames(data2))
data3 <- rbind(data1_t,data2)
glimpse(data3)
library(tidyverse)
library(tidyr)
library(dplyr)
library(gridExtra)
library(ggplot2)
data2 <- read.csv(r"(D:\School\Reading\Google Data Analytic Cert\Case Study\03 BikeSharing\Data\data2022_789_cleaned.csv)")
# the goal is to find difference between subscribers and casual users
# separate subscribers and casual users
data_member <- data2[data2$member_casual=="member",]
data_casual <- data2[data2$member_casual=="casual",]
nrow(data_casual)/(nrow(data_casual)+nrow(data_member))
nrow(data_member)/(nrow(data_casual)+nrow(data_member))
ggplot(data3,aes(x=factor(day,level=days_seq),group=member_casual,color=member_casual),) +
geom_freqpoly(stat="count",size=1) +
xlab("Ride distribution in a week(normalized)") +
ylab("Frequency")
data3 <-  rbind(data_member[sample(1:nrow(data_member), 120000),], data_casual[sample(1:nrow(data_casual), 120000),])
ggplot(data3,aes(x=factor(day,level=days_seq),group=member_casual,color=member_casual),) +
geom_freqpoly(stat="count",size=1) +
xlab("Ride distribution in a week(normalized)") +
ylab("Frequency")
ggplot(data3,aes(x=factor(day,level=days_seq),group=member_casual,color=member_casual),) +
geom_freqpoly(stat="count",size=1) +
xlab("Ride distribution in a week(normalized)") +
ylab("Frequency")
days_seq = c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday")
member_average_rides_per_day <- nrow(data_member)/7
casual_average_rides_per_day <- nrow(data_casual)/7
ggplot(data3,aes(x=factor(day,level=days_seq),group=member_casual,color=member_casual),) +
geom_freqpoly(stat="count",size=1) +
xlab("Ride distribution in a week(normalized)") +
ylab("Frequency")
